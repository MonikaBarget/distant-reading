name: Build & Deploy VitePress + JupyterLite to GitHub Pages v23

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write  # required for gh-pages deployment

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-vitepress:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install deps
        run: npm ci
      - name: Build VitePress
        run: npm run build
      - name: Show VitePress output
        run: |
          echo "VitePress dist (first 50 files):"
          find docs/.vitepress/dist -maxdepth 2 -type f | sed -n '1,50p'
      - name: Upload VitePress artifact
        uses: actions/upload-artifact@v4
        with:
          name: vitepress-dist
          path: docs/.vitepress/dist

  build-jupyterlite:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Clean previous JupyterLite build dirs & caches
        run: |
          set -euxo pipefail
          rm -rf dist
          rm -f .doit.db .doit* .jupyterlite.doit.db db.json || true
          echo "Cleaned workspace."

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install JupyterLite toolchain (JL4 era)
        run: |
          set -euxo pipefail
          python -m pip install --upgrade pip wheel
          pip install \
            "jupyterlite-core>=0.6,<0.7" \
            "jupyterlite-pyodide-kernel>=0.6,<0.7" \
            "jupyter-server>=2.14,<3" \
            "jupyterlab_server>=2.27,<3"
          jupyter lite --version

      # Create the configuration so that browsers fetch Pyodide from CDN
      - name: Create JupyterLite config (CDN Pyodide)
        run: |
          cat > jupyter-lite.json << 'EOF'
          {
            "jupyter-lite-schema-version": 0,
            "jupyter-config-data": {
              "litePluginSettings": {
                "@jupyterlite/pyodide-kernel-extension:kernel": {
                  "pyodideUrl": "https://cdn.jsdelivr.net/pyodide/v0.26.2/full/pyodide.js"
                }
              }
            }
          }
          EOF
          echo "Wrote CDN-based jupyter-lite.json:"
          cat jupyter-lite.json

      - name: Build JupyterLite site (no local Pyodide, browser fetches from CDN)
        run: |
          set -euxo pipefail
          echo "Contents before build:"
          find jupyterlite/contents -maxdepth 3 -type f \( -name "*.ipynb" -o -name "*.py" \) || true

          # Build lab and tree apps
          jupyter lite build \
            --apps lab tree \
            --contents ./jupyterlite/contents \
            --output-dir dist/jupyterlite \
            --debug

          echo "Build complete. Checking outputs:"
          find dist/jupyterlite -maxdepth 2 -type d
          test -f dist/jupyterlite/index.html
          test -f dist/jupyterlite/lab/index.html
          test -f dist/jupyterlite/tree/index.html
          test -f dist/jupyterlite/jupyter-lite.json

      - name: Upload JupyterLite artifact
        uses: actions/upload-artifact@v4
        with:
          name: jupyterlite-dist
          path: dist/jupyterlite

  assemble-and-deploy:
    needs: [build-vitepress, build-jupyterlite]
    runs-on: ubuntu-latest
    steps:
      - name: Download VitePress artifact
        uses: actions/download-artifact@v4
        with:
          name: vitepress-dist
          path: _tmp/vitepress
      - name: Download JupyterLite artifact
        uses: actions/download-artifact@v4
        with:
          name: jupyterlite-dist
          path: _tmp/jupyterlite
      - name: Assemble publish directory
        run: |
          set -euxo pipefail
          rm -rf dist
          mkdir -p dist
          # VitePress site at root
          cp -r _tmp/vitepress/* dist/
          # JupyterLite under /jupyterlite
          mkdir -p dist/jupyterlite
          cp -r _tmp/jupyterlite/* dist/jupyterlite/
          # Ensure GitHub Pages doesn't mangle static assets
          touch dist/.nojekyll

          echo "Final dist tree (top-level folders):"
          find dist -maxdepth 2 -type d

          # Sanity checks
          test -f dist/index.html
          test -f dist/jupyterlite/index.html
          test -f dist/jupyterlite/lab/index.html
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          keep_files: false
