name: Build & Deploy VitePress + JupyterLite to GitHub Pages v14

on:
  push:
    branches: [ main ]

permissions:
  contents: write  # needed by peaceiris/actions-gh-pages

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-vitepress:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install deps
        run: npm ci
      - name: Build VitePress
        run: npm run build
      - name: Show VitePress output
        run: |
          echo "VitePress dist:"; find docs/.vitepress/dist -maxdepth 2 -type f | sed -n '1,120p'
      - name: Upload VitePress artifact
        uses: actions/upload-artifact@v4
        with:
          name: vitepress-dist
          path: docs/.vitepress/dist
   
  build-jupyterlite:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install JupyterLite toolchain
        run: |
          set -euxo pipefail
          python -m pip install --upgrade pip wheel
          pip install \
            "jupyterlite-core>=0.6,<0.7" \
            "jupyterlite-pyodide-kernel>=0.6,<0.7" \
            "jupyter-server>=2.14,<3" \
            "jupyterlab_server>=2.27,<3"
          jupyter lite --version

      - name: Create JupyterLite config with CDN URL
        run: |
          mkdir -p jupyterlite
          cat > jupyterlite/jupyter-lite.json << 'EOF'
          {
            "jupyter-lite-schema-version": 0,
            "jupyter-config-data": {
              "litePluginSettings": {
                "@jupyterlite/pyodide-kernel-extension:kernel": {
                  "pyodideUrl": "https://cdn.jsdelivr.net/pyodide/v0.26.2/full/pyodide.js"
                }
              }
            }
          }
          EOF
          cat jupyterlite/jupyter-lite.json

      - name: Build JupyterLite without bundling Pyodide
        run: |
          set -euxo pipefail
          
          echo "Contents before build:"
          find jupyterlite/contents -maxdepth 3 -type f \( -name "*.ipynb" -o -name "*.py" \) || true

          # Build WITHOUT --pyodide flag - let browsers fetch from CDN
          jupyter lite build \
            --contents ./jupyterlite/contents \
            --output-dir dist/jupyterlite \
            --debug

          echo "Built JupyterLite tree (first 120 files):"
          find dist/jupyterlite -maxdepth 3 -type f | sed -n '1,120p'

          # Check for required files
          test -f dist/jupyterlite/index.html
          test -f dist/jupyterlite/lab/index.html || \
          test -f dist/jupyterlite/retro/index.html || \
          test -f dist/jupyterlite/tree/index.html || \
          (echo "No known app entry (lab/retro/tree) found"; exit 1)

      - name: Upload JupyterLite artifact
        uses: actions/upload-artifact@v4
        with:
          name: jupyterlite-dist
          path: dist/jupyterlite