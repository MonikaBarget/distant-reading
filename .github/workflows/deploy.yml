name: Build & Deploy VitePress + JupyterLite to GitHub Pages v21

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write  # needed for GitHub Pages deploy

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-vitepress:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Build VitePress
        run: npm run build
      - name: Upload VitePress artifact
        uses: actions/upload-artifact@v4
        with:
          name: vitepress-dist
          path: docs/.vitepress/dist

  build-jupyterlite:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Clean previous build dirs & caches
        run: |
          set -euxo pipefail
          rm -rf dist
          rm -f .doit.db .doit* .jupyterlite.doit.db db.json || true

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install JupyterLite toolchain (JL4-compatible)
        run: |
          set -euxo pipefail
          python -m pip install --upgrade pip wheel
          pip install \
            "jupyterlite-core>=0.6,<0.7" \
            "jupyterlite-pyodide-kernel>=0.6,<0.7" \
            "jupyter-server>=2.14,<3" \
            "jupyterlab_server>=2.27,<3"
          jupyter lite --version

      - name: Create JupyterLite config (folder-based Pyodide URL)
        run: |
          set -euxo pipefail
          OWNER_RAW="${GITHUB_REPOSITORY%/*}"
          REPO_RAW="${GITHUB_REPOSITORY#*/}"
          OWNER_LC="${OWNER_RAW,,}"
          REPO_LC="${REPO_RAW,,}"
          BASE="https://${OWNER_LC}.github.io/${REPO_LC}/jupyterlite/pyodide/"
          echo "Using pyodideUrl: ${BASE}"
          cat > jupyter-lite.json << EOF
          {
            "jupyter-lite-schema-version": 0,
            "jupyter-config-data": {
              "litePluginSettings": {
                "@jupyterlite/pyodide-kernel-extension:kernel": {
                  "pyodideUrl": "${BASE}"
                }
              }
            }
          }
          EOF
          cat jupyter-lite.json

      - name: Build JupyterLite site
        run: |
          set -euxo pipefail
          echo "Building JupyterLite..."
          jupyter lite build \
            --apps lab,tree \
            --contents ./jupyterlite/contents \
            --output-dir dist/jupyterlite \
            --debug
          echo "Built directory structure:"
          find dist/jupyterlite -maxdepth 2 -type d

      - name: Fetch and bundle Pyodide runtime locally (from GitHub release)
        run: |
          set -euxo pipefail
          PYODIDE_VER="0.26.2"
          BASE="https://github.com/pyodide/pyodide/releases/download/${PYODIDE_VER}"
          OUT="dist/jupyterlite/pyodide"
          mkdir -p "${OUT}"

          echo "Fetching Pyodide ${PYODIDE_VER} runtime files..."
          curl -fL "${BASE}/pyodide.js"     -o "${OUT}/pyodide.js"
          curl -fL "${BASE}/pyodide.wasm"   -o "${OUT}/pyodide.wasm"
          curl -fL "${BASE}/repodata.json"  -o "${OUT}/repodata.json" || true

          echo "Listing downloaded files:"
          ls -lh "${OUT}"

          test -f "${OUT}/pyodide.js"
          test -f "${OUT}/pyodide.wasm"

      - name: Upload JupyterLite artifact
        uses: actions/upload-artifact@v4
        with:
          name: jupyterlite-dist
          path: dist/jupyterlite

  assemble-and-deploy:
    needs: [build-vitepress, build-jupyterlite]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: _tmp
      - name: Assemble publish directory
        run: |
          set -euxo pipefail
          rm -rf dist
          mkdir -p dist
          cp -r _tmp/vitepress-dist/* dist/
          mkdir -p dist/jupyterlite
          cp -r _tmp/jupyterlite-dist/* dist/jupyterlite/
          touch dist/.nojekyll

          echo "Final dist structure:"
          find dist/jupyterlite -maxdepth 2 -type f | sed -n '1,120p'
          test -f dist/jupyterlite/pyodide/pyodide.js

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          keep_files: false
