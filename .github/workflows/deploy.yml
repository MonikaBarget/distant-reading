name: Build & Deploy VitePress + JupyterLite to GitHub Pages v28

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-vitepress:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Build VitePress
        run: npm run build
      - name: Upload VitePress artifact
        uses: actions/upload-artifact@v4
        with:
          name: vitepress-dist
          path: docs/.vitepress/dist

  build-jupyterlite:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Clean previous build and caches
        run: |
          set -euxo pipefail
          rm -rf dist
          rm -f .doit.db .doit* .jupyterlite.doit.db db.json || true

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install JupyterLite toolchain (Pyodide 0.26 compatible)
        run: |
          set -euxo pipefail
          python -m pip install --upgrade pip wheel
          pip install -r requirements.txt
          jupyter lite --version

      - name: Create JupyterLite configuration
        run: |
          cat > jupyter-lite.json << 'EOF'
          {
            "jupyter-lite-schema-version": 0,
            "jupyter-config-data": {
              "litePluginSettings": {
                "@jupyterlite/pyodide-kernel-extension:kernel": {
                  "pyodideUrl": "https://cdn.jsdelivr.net/pyodide/v0.26.2/full/pyodide.js"
                }
              }
            }
          }
          EOF
          echo "Configured Pyodide entry: https://cdn.jsdelivr.net/pyodide/v0.26.2/full/pyodide.js"

      - name: Build JupyterLite site
        run: |
          set -euxo pipefail
          jupyter lite build \
            --contents ./jupyterlite/contents \
            --output-dir dist/jupyterlite \
            --debug
          test -f dist/jupyterlite/index.html
          test -f dist/jupyterlite/lab/index.html

      - name: Patch JupyterLite HTML config embedding
        run: |
          set -euxo pipefail
          CONFIG_FILE="dist/jupyterlite/jupyter-lite.json"
          HTML_FILE="dist/jupyterlite/lab/index.html"

          if [ -f "$CONFIG_FILE" ] && [ -f "$HTML_FILE" ]; then
            echo "Embedding JupyterLite config into HTML..."
            CONFIG_JSON=$(jq -c '.' "$CONFIG_FILE")
            sed -i "s|<script id=\"jupyter-config-data\" type=\"application/json\" data-jupyter-lite-root=\"..\">{}</script>|<script id=\"jupyter-config-data\" type=\"application/json\" data-jupyter-lite-root=\"..\">${CONFIG_JSON}</script>|" "$HTML_FILE"
          else
            echo "Config or HTML file not found; skipping patch."
          fi

      - name: Download Pyodide runtime locally (handles name change)
        run: |
          set -euxo pipefail
          PYODIDE_VER="0.26.2"
          BASE="https://cdn.jsdelivr.net/pyodide/v${PYODIDE_VER}/full"
          OUT="dist/jupyterlite/pyodide"
          mkdir -p "${OUT}"

          curl -fL "${BASE}/pyodide.js"     -o "${OUT}/pyodide.js"
          curl -fL "${BASE}/pyodide.mjs"    -o "${OUT}/pyodide.mjs" || true
          curl -fL "${BASE}/repodata.json"  -o "${OUT}/repodata.json" || true

          (curl -fL "${BASE}/pyodide.wasm"      -o "${OUT}/pyodide.wasm" \
           || curl -fL "${BASE}/pyodide.asm.wasm" -o "${OUT}/pyodide.asm.wasm")

          test -f "${OUT}/pyodide.js"

      - name: Upload JupyterLite artifact
        uses: actions/upload-artifact@v4
        with:
          name: jupyterlite-dist
          path: dist/jupyterlite

  assemble-and-deploy:
    needs: [build-vitepress, build-jupyterlite]
    runs-on: ubuntu-latest
    steps:
      - name: Download VitePress artifact
        uses: actions/download-artifact@v4
        with:
          name: vitepress-dist
          path: _tmp/vitepress

      - name: Download JupyterLite artifact
        uses: actions/download-artifact@v4
        with:
          name: jupyterlite-dist
          path: _tmp/jupyterlite

      - name: Assemble publish directory
        run: |
          set -euxo pipefail
          rm -rf dist
          mkdir -p dist
          cp -r _tmp/vitepress/* dist/
          mkdir -p dist/jupyterlite
          cp -r _tmp/jupyterlite/* dist/jupyterlite/
          touch dist/.nojekyll

          test -f dist/index.html
          test -f dist/jupyterlite/index.html
          test -f dist/jupyterlite/pyodide/pyodide.js

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          keep_files: false
